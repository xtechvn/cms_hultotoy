@using Utilities.Contants
@using Entities.ViewModels
@using  Entities.ViewModels.Programs
@using Utilities
@model GenericViewModel<ProgramsPackageModel>
@{
    Layout = null;
    int index = 0;
    if (Model != null && Model.ListData != null && Model.ListData.Count > 0)
    {
        index = (Model.CurrentPage - 1) * Model.PageSize;
    }

}
@if (Model != null)
{
    <div class="wrap_bg wrap_bg_no-padding mb20">
        <div class="table-responsive table-default table-gray">
            <table class="table table-nowrap">
                <thead>
                    <tr>
                        <th style="width: 50px;">STT</th>
                        <th style="width: 140px;">Mã gói</th>
                        <th style="width: 140px;">Mô tả</th>
                        <th style="width: 100px;">tên gói</th>
                        <th style="width: 100px;">Hạng phòng</th>
                        <th style="width: 80px;">Giá nhập</th>
                        <th style="width: 70px;">Theo thứ</th>
                        <th style="width: 100px;">Thời gian áp dụng</th>
                        <th style="width: 100px;">Trạng thái</th>
                        <th style="width: 100px;">Tác vụ</th>

                    </tr>
                </thead>
                <tbody>
                    @if (Model.ListData != null && Model.ListData.Count > 0)
                    {
                        foreach (var item in Model.ListData)
                        {
                            if (item.ProgramsPackage != null)
                            {
                                <tr>
                                    <td rowspan="@(item.ProgramsPackage != null ? item.ProgramsPackage.Where(s =>s.Type == 0).GroupBy(s=> new { s.Price, s.RoomType, s.FromDate, s.ApplyDate}).Select(i => i.First()).ToList().Count + item.ProgramsPackage.Where(s =>s.Type != 0).GroupBy(s=> new { s.Price, s.RoomType,s.RoomTypeId, s.FromDate}).Select(i => i.First()).ToList().Count + 1  : 1)">@(++index)</td>
                                    <td rowspan="@(item.ProgramsPackage != null ? item.ProgramsPackage.Where(s =>s.Type == 0).GroupBy(s=> new { s.Price, s.RoomType, s.FromDate, s.ApplyDate}).Select(i => i.First()).ToList().Count + item.ProgramsPackage.Where(s =>s.Type != 0).GroupBy(s=> new { s.Price, s.RoomType,s.RoomTypeId, s.FromDate}).Select(i => i.First()).ToList().Count + 1  : 1)"><a href="/ProgramsPackage/DetailListProgramsPackage/@item.Id/@item.ProgramsPackage[0].id/@item.ProgramName" class="href-btn blue">@item.ProgramName</a> </td>
                                    <td rowspan="@(item.ProgramsPackage != null ? item.ProgramsPackage.Where(s =>s.Type == 0).GroupBy(s=> new { s.Price, s.RoomType, s.FromDate, s.ApplyDate}).Select(i => i.First()).ToList().Count + item.ProgramsPackage.Where(s =>s.Type != 0).GroupBy(s=> new { s.Price, s.RoomType,s.RoomTypeId, s.FromDate}).Select(i => i.First()).ToList().Count + 1  : 1)">@item.Description</td>
                                </tr>

                                @foreach (var item2 in item.ProgramsPackage.Where(s => s.Type != 0).GroupBy(s => new { s.Price, s.RoomType, s.RoomTypeId, s.FromDate }).Select(i => i.First()).ToList())
                                {
                                    <tr>


                                        <td>@item2.PackageName</td>
                                        <td>@item2.RoomType</td>

                                        <td>@item2.Price.ToString("N0")</td>
                                        <td>
                                            <span> @item2.WeekDay.TrimEnd(',', ' ')</span>
                                        </td>

                                        @if (item2.Type != 1)
                                        {
                                            <td>@(Convert.ToDateTime(item2.ApplyDate).ToString("dd/MM/yyyy"))</td>
                                        }
                                        else
                                        {
                                            <td>@(Convert.ToDateTime(item2.FromDate).ToString("dd/MM/yyyy")) - @(Convert.ToDateTime(item2.ToDate).ToString("dd/MM/yyyy")) </td>
                                        }

                                        <td>
                                            @if (item2.OpenStatus == (int)ProgramsPackageStatus.MO_BAN)
                                            {<span class="status-green">@item2.StatusName</span> }
                                        else
                                        {<span class="status-grey">@item2.StatusName</span>}
                                        </td>
                                        <td>

                                            @if (ViewBag.btnSua == 1 && ViewBag.xoa == 1 && ViewBag.edit == 1)
                                            {
                                                <a href="/ProgramsPackage/DetailListProgramsPackage/@item.Id/@item.ProgramsPackage[0].id/@item2.PackageCode" class="href-btn"><i class="fa fa-edit"></i></a>

                                                @if (item2.Type != 1)
                                                {
                                                    <a class="fa fa-trash-o" href="javascript:;" onclick="_ProgramsPackage.DeleteProgramsPackagedb(@item.Id, '@item.ProgramName', '@item2.RoomType',@item2.Amount, '@(Convert.ToDateTime(item2.FromDate).ToString("dd/MM/yyyy"))',@item2.Type,'','@(Convert.ToDateTime(item2.ApplyDate).ToString("dd/MM/yyyy"))');"></a>
                                                }
                                                else
                                                {
                                                    <a class="fa fa-trash-o" href="javascript:;" onclick="_ProgramsPackage.DeleteProgramsPackagedb(@item.Id, '@item.ProgramName', '@item2.RoomType',@item2.Amount, '@(Convert.ToDateTime(item2.FromDate).ToString("dd/MM/yyyy"))',@item2.Type, '@item2.WeekDay');"></a>
                                                }

                                            }

                                        </td>
                                    </tr>
                                }
                                @foreach (var item2 in item.ProgramsPackage.Where(s => s.Type == 0).GroupBy(s => new { s.Price, s.RoomType, s.FromDate, s.ApplyDate }).Select(i => i.First()).ToList())
                                {
                                    <tr>


                                        <td>@item2.PackageName</td>
                                        <td>@item2.RoomType</td>

                                        <td>@item2.Price.ToString("N0")</td>
                                        <td>
                                            <span> @item2.WeekDay.TrimEnd(',', ' ')</span>
                                        </td>

                                        @if (item2.Type != 1)
                                        {
                                            <td>@(Convert.ToDateTime(item2.ApplyDate).ToString("dd/MM/yyyy"))</td>
                                        }
                                        else
                                        {
                                            <td>@(Convert.ToDateTime(item2.FromDate).ToString("dd/MM/yyyy")) - @(Convert.ToDateTime(item2.ToDate).ToString("dd/MM/yyyy")) </td>
                                        }

                                        <td>
                                            @if (item2.OpenStatus == (int)ProgramsPackageStatus.MO_BAN)
                                            {<span class="status-green">@item2.StatusName</span> }
                                        else
                                        {<span class="status-grey">@item2.StatusName</span>}
                                        </td>
                                        <td>

                                            @if (ViewBag.btnSua == 1 && ViewBag.xoa == 1 && ViewBag.edit == 1)
                                            {
                                                <a href="/ProgramsPackage/DetailListProgramsPackage/@item.Id/@item.ProgramsPackage[0].id/@item2.PackageCode" class="href-btn"><i class="fa fa-edit"></i></a>

                                                @if (item2.Type != 1)
                                                {
                                                    <a class="fa fa-trash-o" href="javascript:;" onclick="_ProgramsPackage.DeleteProgramsPackagedb(@item.Id, '@item.ProgramName', '@item2.RoomType',@item2.Amount, '@(Convert.ToDateTime(item2.FromDate).ToString("dd/MM/yyyy"))',@item2.Type,'','@(Convert.ToDateTime(item2.ApplyDate).ToString("dd/MM/yyyy"))');"></a>
                                                }
                                                else
                                                {
                                                    <a class="fa fa-trash-o" href="javascript:;" onclick="_ProgramsPackage.DeleteProgramsPackagedb(@item.Id, '@item.ProgramName', '@item2.RoomType',@item2.Amount, '@(Convert.ToDateTime(item2.FromDate).ToString("dd/MM/yyyy"))',@item2.Type, '@item2.WeekDay');"></a>
                                                }

                                            }

                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td>@(++index)</td>
                                    <td>@item.ProgramName</td>
                                    <td>@item.Description</td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            }

                        }
                    }

                </tbody>
            </table>
        </div>
        @await Component.InvokeAsync("PagingNew", new
       {
           pageModel = new Paging()
           {
               TotalRecord = Model.TotalRecord,
               TotalPage = Model.TotalPage,
               CurrentPage = Model.CurrentPage,
               PageSize = Model.PageSize,
               RecordName = "kết quả",
               PageAction = "_ProgramsPackage.OnPaging({0})",
               PageSelectPageSize = "_ProgramsPackage.onSelectPageSize()",
           }
       })
    </div>

}
else
{
    <div class="search-null center mb40">
        <div class="mb24">
            <img src="/images/graphics/icon-search.png" alt="">
        </div>
        <h2 class="title txt_24">Không tìm thấy kết quả</h2>
        <div class="gray">Chúng tôi không tìm thấy thông tin mà bạn cần, vui lòng thử lại</div>
    </div>

}





