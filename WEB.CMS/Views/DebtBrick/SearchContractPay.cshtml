@{
    Layout = null;
}
@using Entities.ViewModels
@using Entities.ViewModels.Funding
@using Utilities
@model GenericViewModel<ContractPayDebtViewModel>

@if (Model == null || Model.ListData == null || Model.ListData.Count == 0)
{
    <div class="search-null center mb40">
        <div class="mb24">
            <img src="/images/graphics/icon-search.png" alt="">
        </div>
        <h2 class="title txt_24">Không tìm thấy kết quả</h2>
        <div class="gray">Chúng tôi không tìm thấy thông tin mà bạn cần, vui lòng thử lại</div>
    </div>
}
else
{
    <div class="table-responsive table-default table-gray">
        <table class="table table-nowrap">
            <thead>
                <tr>
                    <th style="width: 30px;">STT</th>
                    <th style="width: 100px;">Mã phiếu</th>
                    <th style="width: 140px;">Khách hàng</th>
                    <th style="width: 100px;" class="text-right">Số tiền</th>
                    <th style="width: 100px;">Nội dung</th>
                    <th style="width: 200px;">Trạng thái gạch nợ</th>
                    <th style="width: 140px;">Đơn hàng liên quan</th>
                    <th style="width: 140px;">Ngày tạo</th>
                    <th style="width: 140px;">Người tạo</th>
                    <th style="width: 140px;">Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.ListData != null && Model.ListData.Count > 0)
                {
                    var counter = (Model.CurrentPage - 1) * Model.PageSize;
                    foreach (var item in Model.ListData)
                    {
                        counter++;
                        <tr>
                            <td class="center ">@counter</td>
                            <td class="text-nowrap">
                                <a class="blue" href="/Receipt/Detail?contractPayId=@item.PayId">
                                    @item.BIllNo
                                </a>
                            </td>
                            <td class="text-break">
                                <a href="/CustomerManager/Detail?id=@item.ClientId"><span class="blue"> @item.ClientName</span></a>
                            </td>
                            <td class="text-right">
                                @if (item.Payment == 0)
                                {
                                    <div class="green">0/ </div>
                                }
                                else
                                {
                                    <div class="green">@item.Payment.ToString("N0")/ </div>
                                }
                                <div class="red">@item.Amount.ToString("N0") </div>
                            </td>
                            <td class=" text-break">@item.Note </td>
                            <td class=" text-break">@item.DebtStatusName </td>
                            <td class=" text-break">
                                @if (item.ListOrders != null && item.ListOrders.Count > 0)
                                {
                                    var counterContent = 1;
                                    foreach (var dataNo in item.ListOrders)
                                    {
                                        <a class="blue" href="/Order/Orderdetails?id=@dataNo.DataId">
                                            @dataNo.DataNo
                                        </a>
                                        @if (counterContent < item.ListOrders.Count)
                                        {
                                            <span>,</span>
                                        }
                                        counterContent += 1;
                                    }
                                }
                            </td>
                            <td class=" text-break">@item.CreatedDate.Value.ToString("dd-MM-yyyy HH:mm")</td>
                            <td class=" text-break">@item.UserName </td>
                            <td class=" text-break">
                                @if ((double)item.Payment < item.Amount || item.DebtStatus == (int)DepositHistoryConstant.CONTRACTPAY_DEBT_STATUS.CHUA_GACH_HET)
                                {
                                    <a class="blue"
                                       onclick="_debt_brick_contractpay_service.AddWithContractPay(@item.PayId, @item.ClientId, @item.Payment, @item.Amount, '@item.BIllNo')">
                                        <i class="fa fa-edit"></i> Gạch nợ
                                    </a>
                                }

                                <a class="blue"
                                   onclick="_debt_brick_contractpay_service.UndoDebtContractPay(@item.PayId, @item.ClientId, @item.Payment, @item.Amount, '@item.BIllNo')">
                                    <i class="fa fa-close"></i> Bỏ gạch nợ
                                </a>
                                <a class="blue"
                                   onclick="_debt_brick_contractpay_service.History(@item.PayId, '@item.BIllNo')">
                                    <i class="fa fa-history"></i> Lịch sử
                                </a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}
<style scoped>
    .green {
        color: #009900 !important;
    }

    .blue {
        color: #0065FC !important;
    }
</style>

@await Component.InvokeAsync("Paging", new
{
    pageModel = new Paging()
    {
        TotalRecord = Model.TotalRecord,
        TotalPage = Model.TotalPage,
        CurrentPage = Model.CurrentPage,
        PageSize = Model.PageSize,
        RecordName = "kết quả lọc",
        PageAction = "_debt_brick_contractpay_service.OnPaging({0})"
    }
})
