@{
    Layout = null;
}
@using Utilities.Contants
@using Utilities
@using Entities.ViewModels
@using Entities.Models
@model GenericViewModel<OrderViewModel>
<style>
    .white-popup {
        max-width: 1600px !important;
    }
</style>

<input id="DepartmentIdOrder" value="@ViewBag.DepartmentId" style="display:none" />
<input id="SalerIdOrder" value="@ViewBag.SalerId" style="display:none" />


<div id="data-listOrder">
    <div class="mb20">
        Xuất Excel
        <button class="btn btn-default" type="button" onclick="_ReportDepartment.ExportListOrder()" id="btnExport">
            <i class="fa fa-file-excel-o" id="icon-export" title="Xuất excel">
            </i>
        </button>
    </div>
    <div style="border-bottom: 1px solid #CCCCCC;">

        <div class="table-responsive table-default table-gray wrap_bg wrap_bg_no-padding">
            <table class="table table-nowrap">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Mã đơn</th>
                        <th>
                            Ngày bắt đầu - </br>
                            Ngày kết thúc
                        </th>
                        <th>Khách hàng</th>
                        <th>Nhãn đơn</th>
                        <th class="text-right">Thanh toán</th>
                        <th class="mfp-hide">Nguồn</th>
                        <th class="text-right">Lợi nhuận</th>
                        <th>Trạng thái</th>
                        <th>
                            Ngày tạo
                        </th>
                        <th>Nhân viên chính</th>

                        <th>Hình thức thanh toán</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ListData != null && Model.ListData.Count > 0)
                    {
                        var counter = (Model.CurrentPage - 1) * Model.PageSize;
                        foreach (var item in Model.ListData)
                        {
                            counter++;
                            <tr>
                                <td class="center">@counter</td>
                                <td>
                                    <a class="href-btn blue" href="/Order/@item.OrderId" onclick="_ordersCMS.saveCookieFilter()">@item.OrderCode</a>
                                </td>
                                <td style="width:9%">
                                    @((Convert.ToDateTime(item.StartDate).ToString("dd/MM/yyyy HH:ss") + " - "+ Convert.ToDateTime(item.EndDate).ToString("dd/MM/yyyy HH:ss")).TrimEnd(' ','-'))
                                </td>
                                <td>
                                    <div class="blue">@item.ClientName</div>
                                    <div>@item.ClientNumber</div>
                                    <div>@item.ClientEmail</div>
                                </td>
                                <td><textarea style="min-height: 95px !important; border: 1px solid #ffff !important; overflow-y: hidden !important;" readonly="readonly">@item.Note</textarea> </td>
                                <td class="text-right">
                                    <div class="green">@item.Payment.ToString("N0")/</div>
                                    <div class="red">@(item.Amount ==0? "0":item.Amount.ToString("N0"))</div>
                                </td>

                                <td class="text-right">@item.Profit.ToString("N0")</td>
                                <td>
                                    @switch (item.StatusCode)
                                    {
                                        case (int)(OrderStatus.CREATED_ORDER):
                                        case (int)(OrderStatus.CONFIRMED_SALE):
                                            {
                                                <span class="status-oranger">@item.Status</span>
                                            }
                                            break;
                                        case (int)(OrderStatus.WAITING_FOR_OPERATOR):

                                            {
                                                @*<div class="status-green">@(item.PermisionTypeName==null|| item.PermisionTypeName.Trim() == "" ? "Không công nợ": item.PermisionTypeName) - @item.PaymentStatusName</div>*@
                                                <span class="status-green">@item.Status</span>

                                            }
                                            break;
                                        case (int)(OrderStatus.WAITING_FOR_ACCOUNTANT):
                                            {
                                                <span class="status-green">@item.Status</span>
                                            }
                                            break;
                                        case (int)(OrderStatus.FINISHED):
                                            {
                                                <span class="status-green">@item.Status</span>
                                            }
                                            break;
                                        case ((int)(OrderStatus.CANCEL)):
                                        case ((int)(OrderStatus.ACCOUNTANT_DECLINE)):
                                        case ((int)(OrderStatus.OPERATOR_DECLINE)):
                                            {
                                                <span class="status-red">@item.Status</span>
                                            }
                                            break;
                                    }

                                    <br />

                                </td>
                                <td>
                                    @(Convert.ToDateTime(item.CreateDate).ToString("dd/MM/yyyy HH:ss"))
                                </td>
                                <td>
                                    <div>@item.SalerName </div>
                                    <div>@item.SalerUserName </div>
                                    <div>@item.SalerEmail </div>
                                </td>
                                <td style="width:15% !important"><div class="status-green">@(item.PermisionTypeName == null || item.PermisionTypeName.Trim()=="" ? "Không công nợ": item.PermisionTypeName) - @item.PaymentStatusName</div></td>
                            </tr>
                        }
                    }

                </tbody>
            </table>
        </div>

        <script>
        </script>
        <style>
            .status-bold-green {
                font-size: 12px;
                background: #009933;
                color: #fff;
                padding: 2px 10px;
                border-radius: 5px
            }
        </style>
        @await Component.InvokeAsync("PagingNew", new
        {
            pageModel = new Paging()
            {
                TotalRecord = Model.TotalRecord,
                TotalPage = Model.TotalPage,
                CurrentPage = Model.CurrentPage,
                PageSize = Model.PageSize,
                RecordName = "Đơn hàng",
                PageAction = "_ReportDepartment.OnPagingOrder({0})",
                PageSelectPageSize = "_ReportDepartment.onSelectPageSizeOrder()"
            }
        })
    </div>
</div>
