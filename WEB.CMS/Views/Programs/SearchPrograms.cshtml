@using Entities.ViewModels
@using Utilities.Contants
@using Entities.ViewModels.Programs
@model GenericViewModel<ProgramsViewModel>
@if (Model == null)
{
<div class="search-null center mb40">
    <div class="mb24">
        <img src="/images/graphics/icon-search.png" alt="">
    </div>
    <h2 class="title txt_24">Không tìm thấy kết quả</h2>
    <div class="gray">Chúng tôi không tìm thấy thông tin mà bạn cần, vui lòng thử lại</div>
</div> 
}
else
{

<div class="wrap_bg wrap_bg_no-padding mb20">
    <div class="table-responsive table-default table-gray wrap_bg wrap_bg_no-padding">
        <table class="table table-nowrap">
            <thead>
                <tr>
                    <th style="width: 50px;">STT</th>
                    <th style="width: 140px;">Mã</th>
                    <th style="width: 140px;">Tên</th>
                    @*<th>Loại dịch vụ</th>*@
                    <th>Tên dịch vụ</th>
                    <th>Nhà cung cấp</th>
                    <th style="width: 140px;">Thời gian áp dụng</th>
                    <th style="width: 140px;">Thời gian lưu trú</th>
                    <th>Mô tả</th>
                    <th>Người tạo</th>
                    <th>Ngày tạo</th>
                    <th>Người duyệt</th>
                    <th>Ngày duyệt</th>
                   
                </tr>
            </thead>
            <tbody>
             @if (Model.ListData != null && Model.ListData.Count > 0)
             {
                 var STT = (Model.CurrentPage - 1) * Model.PageSize;
                    foreach (var item in Model.ListData)
                    {
                     <tr>
                         <td>@(++STT)</td>
                         <td style="max-width: 140px !important;"><a class="blue" href="/Programs/DetailPrograms/@item.ProgramId"> @item.ProgramCode</a></td>
                         <td>
                             <div><a class="blue" href="/Programs/DetailPrograms/@item.ProgramId"> @item.ProgramName</a></div>
                             @if (item.Status == (int)ProgramsStatus.luu_nhap)
                             {<div class="status-grey">@item.ProgramStatus</div>}
                             @if (item.Status == (int)ProgramsStatus.Tu_choi)
                             {<div  class="status-red">@item.ProgramStatus</div>}

                             @if (item.Status == (int)ProgramsStatus.Cho_TBP_duyet|| item.Status == (int)ProgramsStatus.Tao_Moi)
                             {<div  class="status-oranger">@item.ProgramStatus</div>}
                             @if (item.Status == (int)ProgramsStatus.Da_duyet)
                             {<div  class="status-green">@item.ProgramStatus</div>}
                         </td>
                         @*<td>@item.ServiceTypeName</td>*@
                         <td>@item.ServiceName</td>
                         <td><a href="/supplier/detail/@item.SupplierId" class="blue txt_14">
                                @item.FullName
                            </a></td>
                         <td>@(Convert.ToDateTime(item.StartDate).ToString("dd/MM/yyyy")) - @(Convert.ToDateTime(item.EndDate).ToString("dd/MM/yyyy"))</td>
                         <td>@(Convert.ToDateTime(item.StayStartDate).ToString("dd/MM/yyyy")) - @(Convert.ToDateTime(item.StayEndDate).ToString("dd/MM/yyyy"))</td>
                         <td style="max-width: 400px !important;">@item.Description</td>
                         <td>
                             <div>@item.UserName</div>
                             <div>@item.UserCreatedFullName</div>
                         </td>
                         <td>@(Convert.ToDateTime(item.CreatedDate).ToString("dd/MM/yyyy"))</td>
                         <td>
                             <div>@item.UserVerifyName</div>
                             <div>@item.UserVerifyNameFullName</div>
                         </td>
                         <td>@(item.VerifyDate!=null? Convert.ToDateTime(item.VerifyDate).ToString("dd/MM/yyyy"):"")</td>
         
                     </tr>
                    }
             }
            </tbody>
        </table>
    </div>

    @await Component.InvokeAsync("PagingNew", new
    {
        pageModel = new Paging()
        {
            TotalRecord = Model.TotalRecord,
            TotalPage = Model.TotalPage,
            CurrentPage = Model.CurrentPage,
            PageSize = Model.PageSize,
            RecordName = "Kết quả",
            PageAction = "_Programs.OnPaging({0})",
            PageSelectPageSize = "_Programs.onSelectPageSize()",
        }
    })
</div>}