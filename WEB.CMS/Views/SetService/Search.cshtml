
@using Utilities
@using Entities.ViewModels
@using  Entities.ViewModels.HotelBooking
@using  Utilities.Contants
@model GenericViewModel<SearchHotelBookingModel>
@if (Model != null)
{

<div class="wrap_bg wrap_bg_no-padding mb20">
    <div class="table-responsive table-default table-gray">
        <table class="table table-nowrap">
            <thead>
                <tr>
                    <th>STT</th>
                    <th>Mã dịch vụ</th>
                    <th>Chi tiết dịch vụ</th>
                    <th>
                        Ngày check in -
                        Ngày check out
                    </th>
                    <th>Doanh thu dịch vụ</th>
                    <th>Giá NET thực tế</th>
                    <th>Lợi nhuận thực tế</th>
                    <th>Mã đơn hàng</th>
                    <th>Ngày tạo</th>
                    <th>Nhân viên bán</th>
                    <th>Điều hành</th>
                    <th>Mã code</th>
                    <th style="min-width:120px">Trạng thái</th>

                </tr>
            </thead>
            <tbody>
                @if (Model.ListData != null && Model.ListData.Count > 0)
                {
                    var STT = (Model.CurrentPage - 1) * Model.PageSize;
@foreach (var item in Model.ListData)
{
    STT++;
                <tr>
                    <td>@STT</td>
                    <td> <a class="blue" href="/SetService/VerifyHotelServiceDetai/@item.Id">@(item.ServiceCode==null? item.Id: item.ServiceCode) </a> </td>
                    <td>
                        <a class="blue" href="javascript:;">@item.HotelName</a><br />
                        @foreach (var i in item.HotelBookingDetai)
                        {
                <span>@i.RoomTypeName : @i.TotalRooms Phòng, @i.TotalDays Đêm </span><br />}
                    </td>
                    <td>@item.ArrivalDate.ToString("dd/MM/yyyy") - @item.DepartureDate.ToString("dd/MM/yyyy")</td>
                    <td>
                        @(item.Amount==null ?"": item.Amount.ToString("N0"))
                    </td>
                    <td>
                        @(item.Price==null ?"": item.Price.ToString("N0"))
                    </td>
                    <td>
                        @{ double operator_profit = (item.Amount == null ? 0 : item.Amount) - (item.Price == null ? 0 : item.Price); }
                        @(operator_profit.ToString("N0"))
                    </td>
                    <td><a class="blue" href="/Order/@item.OrderId">@item.OrderNo</a> </td>

                    <td>@item.CreatedDate.ToString("dd/MM/yyyy")</td>
                    <td>@item.SalerName</td>
                    <td>
                        @item.OperatorName
                    </td>
                    <td style="max-width:10%;width:7%">
                        @(item.BookingCode== null? "": item.BookingCode.TrimEnd(',', ' '))
                    </td>
                    @if (item.Status == (int)ServiceStatus.New)
                    {
                <td><span class="status-oranger">@item.StatusName</span> </td>}
                    @if (item.Status == (int)ServiceStatus.WaitingExcution)
                    {
                <td><span class="status-oranger">@item.StatusName</span></td>}
                    @if (item.Status == (int)ServiceStatus.OnExcution)
                    {
                <td><span class="status-blue">@item.StatusName</span></td>}
                    @if (item.Status == (int)ServiceStatus.ServeCode)
                    {
                <td><span class="status-green">@item.StatusName</span></td>}
                    @if (item.Status == (int)ServiceStatus.ServeCodeKH)
                    {
                <td><span class="status-green">@item.StatusName</span></td>}
                    @if (item.Status == (int)ServiceStatus.Payment)
                    {
                <td><span class="status-green">@item.StatusName</span></td>}
                    @if (item.Status == (int)ServiceStatus.Decline)
                    {
                <td><span class="status-red">@item.StatusName</span></td>}
                    @if (item.Status == (int)ServiceStatus.Cancel)
                    {
                <td><span class="status-red">@item.StatusName</span></td>}

                </tr>
            }}



            </tbody>
        </table>
    </div>
    <input id="countHotel" value="@Model.TotalRecord" style="display:none" />
    @await Component.InvokeAsync("PagingNew", new
    {
        pageModel = new Paging()
        {
            TotalRecord = Model.TotalRecord,
            TotalPage = Model.TotalPage,
            CurrentPage = Model.CurrentPage,
            PageSize = Model.PageSize,
            RecordName = "Chính sách",
            PageAction = "_SetService.OnPaging({0})",
            PageSelectPageSize = "_SetService.onSelectPageSize()",
        }
    })
</div> }
else
{
<div class="search-null center mb40">
    <div class="mb24">
        <img src="/images/graphics/icon-search.png" alt="">
    </div>
    <h2 class="title txt_24">Không tìm thấy kết quả</h2>
    <div class="gray">Chúng tôi không tìm thấy thông tin mà bạn cần, vui lòng thử lại</div>
</div>            }
<style>
    .green {
        color: #4BAC4D;
    }
</style>