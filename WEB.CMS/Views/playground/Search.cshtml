@{
    Layout = null;
}
@using Utilities
@using Entities.ViewModels
@using Entities.ViewModels.PlaygroundDetai;
@using Utilities.Contants;
@{
    var id = (string)ViewBag.ListID;
}
@model GenericViewModel<PlaygroundDetaiViewModel>
@if (Model!= null)
{
    <div class="table-responsive table-default">
        <input type="hidden" id="data-total-record" value="@Model.TotalRecord" />
        <table class="table table-gird">
            <thead>
                <tr class="bg-main2">
                    <th class="center"></th>

                    <th>Tên địa điểm</th>
                    <th>Dịch vụ</th>
                    <th>Bài viết liên quan</th>
                    <th>Ngày đăng</th>
                    <th>Ngày cập nhật gần nhất</th>
                    <th>Trạng thái</th>

                </tr>
            </thead>
            <tbody>
                @if (Model.ListData != null && Model.ListData.Count > 0)
                {
                    var counter = (Model.CurrentPage - 1) * Model.PageSize;
                    foreach (var item in Model.ListData)
                    {
                        counter++;
                        <tr>
                            <td class="center">@counter</td>

                            <td>
                                <a onclick="_Play_ground.OpenPopup('@item.Id')"><p class="italic blue">@item.LocationName</p> </a>
                                @* <a onclick="_Play_ground.OpenPopup(@item.Id)" class="italic blue">@item.LocationName</a>*@
                            </td>
                            <td>@item.ServiceName</td>
                            <td>@item.Title</td>
                            <td>@item.CreateDate.ToString("dd/MM/yyyy HH:mm:ss")</td>
                            <td>@item.UpdateTime.ToString("dd/MM/yyyy HH:mm:ss")</td>
                            @if (item.Status == (int)Status.HOAT_DONG)
                            {
                                <td>Hoạt động</td>
                            }
                            else
                            {
                                <td>Không hoạt động</td>
                            }

                        </tr>
                    }

                }
            </tbody>
        </table>
    </div>

    @await Component.InvokeAsync("Paging", new
    {
        pageModel = new Paging()
        {
            TotalRecord = Model.TotalRecord,
            TotalPage = Model.TotalPage,
            CurrentPage = Model.CurrentPage,
            PageSize = Model.PageSize,
            RecordName = "khu vui chơi",
            PageAction = "_Play_ground.OnPaging({0})"
        }
    })
}
else
{
    <div class="text-center">
        <h2 class="title txt_24">Không tìm thấy kết quả</h2>
        <div class="gray">Chúng tôi không tìm thấy thông tin mà bạn cần, vui lòng thử lại</div>
    </div>

}


