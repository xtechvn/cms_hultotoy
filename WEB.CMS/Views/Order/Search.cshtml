@{
    Layout = null;
}
@using Utilities.Contants
@using Entities.ViewModels.Invoice;
@using Entities.ViewModels
@using Entities.Models
@model GenericViewModel<OrderViewModel>
@{
    var Total = (TotalValueOrder)ViewBag.FilterOrder.TotalValueOrder;
    var TotalRecord = (int)ViewBag.FilterOrder.Totalrecord;
    var TotalRecord1 = (int)ViewBag.FilterOrder.Totalrecord1;
    var TotalRecord2 = (int)ViewBag.FilterOrder.Totalrecord2;
    var TotalRecord3 = (int)ViewBag.FilterOrder.Totalrecord3;
    var TotalRecord4 = (int)ViewBag.FilterOrder.Totalrecord4;
    var TotalRecordErr = (int)ViewBag.FilterOrder.TotalrecordErr;
    var TotalData = (int)ViewBag.FilterOrder.TotalData;
    List<InvoiceRequestViewModel> invoiceList = (List<InvoiceRequestViewModel>)ViewBag.Invoice;
}
<div class="tab-default" style="border-bottom: 1px solid #CCCCCC;">
    <div class="row" style=" width: 100%; ">
        <input id="countOrder" value="@TotalRecord" style="display:none" />
        <div class="tab-default col-md-9 mb0 mt10">
            <a href="javascript:;" onclick="_ordersCMS.OnSearchStatus(99)" id="countSttAll" class="active">Tất cả đơn hàng (@TotalRecord)</a>
            <a href="javascript:;" onclick="_ordersCMS.OnSearchStatus(1)" id="countSttCheck">Đang tư vấn (@TotalRecord1)</a>
            <a href="javascript:;" onclick="_ordersCMS.OnSearchStatus(2)" id="countSttNotDone">Chưa khởi hành (@TotalRecord2)</a>
            <a href="javascript:;" onclick="_ordersCMS.OnSearchStatus(3)" id="countSttDone">Đã khởi hành (@TotalRecord3)</a>
            <a href="javascript:;" onclick="_ordersCMS.OnSearchStatus(4)" id="countSttErr">Đơn hàng lỗi (@TotalRecordErr)</a>
            <a href="javascript:;" onclick="_ordersCMS.OnSearchStatus(0)" id="countSttNews">Đơn chờ nhận triển khai (@TotalRecord4)</a>
        </div>
        <div class="col-md-3 text-right mt10">
            <button type="submit" class="btn btn-default" style="" onclick="_order_manual.CreateOrderManual()">Tạo đơn hàng</button>
            @*<button type="submit" class="btn btn-default" style="" onclick="_order_ws_excel.ImportWSExcel()">Import đơn hàng TTB</button>*@
        </div>
    </div>


</div>
<div class="line-bottom mb20">
    <div class="flex">
        <div class="mb10 mr-4">Tổng giá trị: <strong>@Total.TotalAmmount</strong></div>
        <div class="mb10 mr-4">Đã thanh toán: <strong>@Total.TotalProductService</strong></div>
        <div class="mb10 mr-4">Chưa thanh toán: <strong>@((Convert.ToDouble(Total.TotalAmmount) - Convert.ToDouble(Total.TotalProductService)).ToString("N0"))</strong></div>
        <div id="totalProfit" class="mb10 mr-4 hide-element">Lợi nhuận: <strong>@Total.TotalProfit</strong></div>
    </div>
</div>
<div class="table-responsive table-default table-gray wrap_bg wrap_bg_no-padding">
    <table class="table table-nowrap">
        <thead>
            <tr>
                <th>STT</th>
                <th>Mã đơn</th>
                <th>
                    Ngày bắt đầu - </br>
                    Ngày kết thúc
                </th>
                <th>Khách hàng</th>
                <th>Nhãn đơn</th>
                <th class="text-right">Thanh toán</th>
                <th class="mfp-hide">Nguồn</th>
                <th class="text-right">Lợi nhuận</th>
                <th>Mã giới thiệu</th>
                <th>Trạng thái</th>
                <th>
                    Ngày tạo
                    <a class="sort">&#8595;</a>
                </th>
                <th class="mfp-hide">Người tạo</th>
                <th class="mfp-hide">
                    Ngày cập nhật
                    <a class="sort">&#8593;</a>
                </th>
                <th class="mfp-hide">Người cập nhật</th>
                <th class="mfp-hide">Nhân viên chính</th>
                <th class="mfp-hide">Nhân viên phụ</th>
                <th class="mfp-hide">Voucher áp dụng</th>
                <th class="mfp-hide">Điều hành viên</th>
                <th class="mfp-hide action-btn">Action</th>
                <th class="mfp-hide action-tc">Action</th>
                
                <th class="mfp-hide">Mã hóa đơn</th>
                <th>Hình thức thanh toán</th>
                <th class="mfp-hide">Khách phải trả</th>
                <th class="mfp-hide">Yêu cầu hóa đơn</th>
                

            </tr>
        </thead>
        <tbody>
            @if (Model.ListData != null && Model.ListData.Count > 0)
            {
                var counter = (Model.CurrentPage - 1) * Model.PageSize;
                foreach (var item in Model.ListData)
                {
                    counter++;
                    <tr>
                        <td class="center">@counter</td>
                        <td>
                            <a class="blue" href="/Order/@item.OrderId" onclick="_ordersCMS.saveCookieFilter()">@item.OrderCode</a>
                        </td>
                        <td style="width:15%">
                            @((item.StartDate + " - "+ item.EndDate).TrimEnd(' ','-'))
                        </td>
                        <td>
                            <div class="blue">@item.ClientName</div>
                            <div>@item.ClientNumber</div>
                            <div>@item.ClientEmail</div>
                        </td>
                        <td style="width:15%;"><textarea style="min-height: 95px !important; border: 1px solid #ffff !important; overflow-y: hidden !important;" readonly="readonly">@item.Note</textarea> </td>
                        <td class="text-right">
                            <div class="green">@item.Payment.ToString("#,##0")/</div>
                            <div class="red">@(item.Amount ==0? "0":item.Amount.ToString("#,##"))</div>
                        </td>
                        <td class="mfp-hide">@item.UtmSource</td>
                        <td class="text-right">@item.Profit.ToString("#,##")</td>
                        <td class="text-right">@item.UtmMedium</td>
                        <td style="width:12% !important">
                            @switch (item.StatusCode)
                            {
                                case (int)(OrderStatus.CREATED_ORDER):
                                case (int)(OrderStatus.CONFIRMED_SALE):
                                    {
                                        <span class="status-oranger">@item.Status</span>
                                    }
                                    break;
                                case (int)(OrderStatus.WAITING_FOR_OPERATOR):

                                    {
                                        @*<div class="status-green">@(item.PermisionTypeName==null|| item.PermisionTypeName.Trim() == "" ? "Không công nợ": item.PermisionTypeName) - @item.PaymentStatusName</div>*@
                                        <span class="status-green">@item.Status</span>

                                    }
                                    break;
                                case (int)(OrderStatus.WAITING_FOR_ACCOUNTANT):
                                    {
                                        <span class="status-green">@item.Status</span>
                                    }
                                    break;
                                case (int)(OrderStatus.FINISHED):
                                    {
                                        <span class="status-green">@item.Status</span>
                                    }
                                    break;
                                case ((int)(OrderStatus.CANCEL)):
                                case ((int)(OrderStatus.ACCOUNTANT_DECLINE)):
                                case ((int)(OrderStatus.OPERATOR_DECLINE)):
                                case ((int)(OrderStatus.DonRac)):
                                    {
                                        <span class="status-red">@item.Status</span>
                                    }
                                    break;
                            }

                            <br />

                        </td>
                        <td>
                            @item.CreateDate
                        </td>

                        <td class="mfp-hide">@item.CreateName</td>

                        <td class="mfp-hide">@item.UpdateDate</td>

                        <td class="mfp-hide">@item.UpdateName</td>

                        <td class="mfp-hide">
                            <div>@item.SalerName </div>
                            <div>@item.SalerUserName </div>
                            <div>@item.SalerEmail </div>
                        </td>

                        <td class="mfp-hide">@(item.SaleGroupName.TrimEnd(' ',',')) </td>
                        <td class="mfp-hide">@item.Vouchercode </td>
                        <td class="mfp-hide">@(item.OperatorIdName.TrimEnd(' ',',')) </td>
                        <td class="mfp-hide action-btn">
                            @if (!item.OrderCode.ToUpper().StartsWith("DH") && !item.OrderCode.ToUpper().StartsWith("O") && (item.ServiceType == "" || item.ServiceType == null))
                            {
                                <button type="button" class="btn btn-default bg-main" onclick="_ordersCMS.ReCreateOrder(@item.OrderId)">
                                    <i class="fa fa-plus-circle"></i>
                                    Tạo lại đơn
                                </button>
                            }
                        </td>
                        <td class="mfp-hide action-tc">
                            <button type="button" class="btn btn-default bg-main" onclick=" _ordersCMS.OpenPopupAddSale(@item.OrderId)">
                                Nhận xử lý đơn hàng
                            </button>
                        </td>
                  
                        <td class="mfp-hide">@item.UpdateName</td>
                        <td style="width:12% !important">
                            @if (item.PaymentStatus != "")
                            {
                                @if (Convert.ToInt32(item.PaymentStatus) == (int)PaymentStatus.UNPAID)
                                {
                                    <div class="status-oranger">
                                        @(item.PermisionTypeName == null || item.PermisionTypeName.Trim()=="" ? "Không công nợ": item.PermisionTypeName) - @item.PaymentStatusName
                                    </div>
                                }
                                @if (Convert.ToInt32(item.PaymentStatus) == (int)PaymentStatus.PAID)
                                {
                                    <div class="status-green">
                                        @(item.PermisionTypeName == null || item.PermisionTypeName.Trim()=="" ? "Không công nợ": item.PermisionTypeName) - @item.PaymentStatusName
                                    </div>
                                }
                                @if (Convert.ToInt32(item.PaymentStatus) == (int)PaymentStatus.PAID_NOT_ENOUGH)
                                {
                                    <div class="status-blue">
                                        @(item.PermisionTypeName == null || item.PermisionTypeName.Trim()=="" ? "Không công nợ": item.PermisionTypeName) - @item.PaymentStatusName
                                    </div>
                                }
                            }
                        </td>
                        <td class="mfp-hide text-right">
                            @((item.Amount - item.Payment).ToString("N0"))
                        </td>
                        @{
                            var invoiceByOrder = invoiceList.Count > 0 ? invoiceList.FirstOrDefault(x => x.OrderId.ToString().Trim() == item.OrderId.Trim()) : null;
                        }
                        <td class="mfp-hide">
                            @((invoiceByOrder != null && invoiceByOrder.OrderId > 0 && invoiceByOrder.Status == (int)INVOICE_REQUEST_STATUS.HOAN_THANH) ? "Có":"Không")

                        </td>
                       
                    </tr>
                }
            }

        </tbody>
    </table>
</div>

<script>
</script>
<style>
    .status-bold-green {
        font-size: 12px;
        background: #009933;
        color: #fff;
        padding: 2px 10px;
        border-radius: 5px
    }
</style>
@await Component.InvokeAsync("PagingNew", new
{
    pageModel = new Paging()
    {
        TotalRecord = TotalData,
        TotalPage = Model.TotalPage,
        CurrentPage = Model.CurrentPage,
        PageSize = Model.PageSize,
        RecordName = "hợp đồng",
        PageAction = "_ordersCMS.OnPaging({0})",
        PageSelectPageSize = "_ordersCMS.onSelectPageSize()"
    }
})